lets create a loading component , in HomeScreen replace loading text with <LoadingBox/> component 

in components folder create LoadingBox.js file 
import React from 'react';
import Spinner from 'react-bootstrap/Spinner';
const LoadingBox = () => {
  return (
    <Spinner animation="border" role="status">
      <span className="visually-hidden">Loading....</span>
    </Spinner>
  );
};

export default LoadingBox;

and import it in HomeScreen.js

Implement Error component
In HomeScreen.js replace <div>{error}</div> with <MessageBox variant="danger">{error}</MessageBox>

now create MessageBox.js in components folder
import React from 'react';
import Alert from 'react-bootstrap/Alert';
const MessageBox = (props) => {
  return <Alert variant={props.variant || 'info'}>{props.children}</Alert>;
};

export default MessageBox;

and import it to HomeScreen.js

make the same changes in ProductScreen.js replace loading with LoadingBox , error with MessageBox


in src folder create a utils.js file , to show error proper error message 

export const getError = (error) => {
  return error.response && error.response.data.message
    ? error.response.data.message
    : error.message;
};

in ProductScreen.js useEffect catch block , use the getError method from utils , as payload: getError(err)

  useEffect(() => {
    const fetchData = async () => {
      dispatch({ type: 'FETCH_REQUEST' });
      try {
        const result = await axios.get(`/api/products/slug/${slug}`);
        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });
      } catch (err) {
        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });
      }
    };

    fetchData();
  }, [slug]);